"""
This script loads data from out files generated by dyn.py, for sampling in different active learning iterations
It generates a violin plot showing the distribution of uncertainty in total energy across iterations
"""
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from matplotlib.lines import Line2D

# files correspond to out files generated by dyn.py using models in respective active learning iterations 
files = ["1", "2", "3", "4","5"]
all_data = []

for file in files:
    df = pd.read_csv(file, delim_whitespace=True, header=2, skipfooter=1, engine="python")
    data = df.iloc[:, 4]  # Extract column 5
    all_data.append(pd.DataFrame({"Value": data, "File": file}))

# Combine all data into a single DataFrame
combined_df = pd.concat(all_data, ignore_index=True)

plt.figure(figsize=(8, 6))
sns.violinplot(x="File", y="Value", data=combined_df, hue="File", palette="flare", legend=False,linewidth=0.5)
mean_values = {file: combined_df[combined_df["File"] == file]["Value"].mean() for file in files}
legend_labels = [f'AL #{file}: {mean_values[file]:.4f}' for file in files]
legend_handles = [Line2D([0], [0], color='w', alpha=0, label=label) for label in legend_labels]
plt.legend(handles=legend_handles, loc='upper right',title="Average",fontsize=16,title_fontsize=17,frameon=False)

plt.xlabel("AL iterations",fontsize=22)
plt.ylabel("Ensemble SD, eV/atom",fontsize=22)
plt.xticks(fontsize=18)
plt.yticks(fontsize=18)
plt.ylim([None,0.010])
plt.tight_layout()
plt.show()
plt.savefig("violin.png")